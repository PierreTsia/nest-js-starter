# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ChapterType {
  id: ID!
  title: String!
}

type ProjectType {
  id: ID
  title: String!
  description: String!
  chapters: [ChapterType!]!
}

type WordType {
  id: ID!
  chapter: ChapterType!
  label: String!
  paragraphIndex: Float!
  wordIndex: Float!
  character: String
  extract: String
}

type ItemType {
  id: ID!
  title: String!
  price: Float!
  description: String!
}

type UserType {
  id: ID!
  username: String!
  email: String!
  roles: [String!]!
}

type AuthPayload {
  access_token: String!
  user: UserType!
}

type RawLinesType {
  line: Float
  text: String
}

type RawTextType {
  text: String
}

type SearchWordsResultsType {
  count: Float!
  results: [WordResultType!]!
}

type WordResultType {
  word: WordType!
  extract: String!
}

type ParagraphType {
  id: ID
  chapter: ChapterType!
  index: Float!
  words: [String!]!
  annotations: [String!]!
}

type SearchResultType {
  paragraph: ParagraphType!
  paragraphIndex: Float!
  wordIndex: Float!
  label: String!
  extract: String!
}

type CommentType {
  id: ID
  content: String!
  createdAt: String!
  createdBy: UserType!
}

type CharacterType {
  id: ID
  description: String
  label: String!
  comment: CommentType
  comments: [CommentType!]
  project: ProjectType!
}

type Query {
  items: [ItemType!]!
  item(id: ID!): ItemType!
  me: UserType!
  login(email: String!, password: String!): AuthPayload!
  findProjects: [ProjectType!]!
  chapterLines(input: ChapterTextInput!): [RawLinesType!]!
  fullText(chapterId: String!): RawTextType!
  searchWords(searchInput: SearchWordsInput!): SearchWordsResultsType!
  searchParagraphs(searchInput: SearchWordsInput!): [SearchResultType!]!
  characters: [CharacterType!]!
  characterById(id: String!): CharacterType!
}

input ChapterTextInput {
  chapterId: String!
  start: Float
  end: Float
}

input SearchWordsInput {
  projectWide: Boolean!
  chapterId: String!
  queryString: String!
}

type Mutation {
  createItem(input: ItemInput!): ItemType!
  updateItem(input: ItemInput!, id: ID!): ItemType!
  deleteItem(id: ID!): ItemType!
  populateItems(count: Float!): [ItemType!]!
  signup(email: String!, username: String!, password: String!): AuthPayload!
  createProject(projectInput: ProjectInput!): ProjectType!
  createCharacter(input: CreateCharacterInput!): CharacterType!
  updateCharacter(input: UpdateCharacterInput!): CharacterType!
  commentCharacter(input: CommentCharacterInput!): CharacterType!
}

input ItemInput {
  title: String!
  price: Int!
  description: String!
}

input ProjectInput {
  title: String!
  description: String!
}

input CreateCharacterInput {
  label: String!
  projectId: String!
  description: String!
}

input UpdateCharacterInput {
  id: String!
  label: String
  description: String
  comment: CreateCommentInput
}

input CreateCommentInput {
  content: String!
}

input CommentCharacterInput {
  content: String!
  characterId: String!
}
